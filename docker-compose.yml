services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clinicai_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: clinicai_db
      POSTGRES_USER: clinicai_user
      POSTGRES_PASSWORD: clinicai_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - clinicai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clinicai_user -d clinicai_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin - Interface web para gerenciar o PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clinicai_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@clinicai.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin_servers.json:/pgadmin4/servers.json
    networks:
      - clinicai_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis (opcional - para cache e sess√µes)
  redis:
    image: redis:7-alpine
    container_name: clinicai_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - clinicai_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  clinicai_network:
    driver: bridge 